close(Id1, Id2, 24)=true iff
	distance(Id1, Id2, 24)=true.

close(Id1, Id2, 25)=true iff
	close(Id1, Id2, 24)=true or
	distance(Id1, Id2, 25)=true.

close(Id1, Id2, 30)=true iff 
	close(Id1, Id2, 25)=true or
	distance(Id1, Id2, 30)=true.

close(Id1, Id2, 34)=true iff
	close(Id1, Id2, 30)=true or
	distance(Id1, Id2, 34)=true.

close(Id1, Id2, Threshold)=false iff
	not close(Id1, Id2, Threshold)=true.

closeSymmetric(Id1, Id2, Threshold)=true iff
	close(Id1, Id2, Threshold)=true or
	close(Id2, Id1, Threshold)=true.

initiate person(Id)=true if
	start walking(Id)=true,
	not happens disappear(Id)
or	start running(Id)=true,
	not happens disappear(Id)
or	start active(Id)=true,
	not happens disappear(Id)
or	start abrupt(Id)=true,
	not happens disappear(Id).

initiate person(Id)=false if
	disappear(Id).

initiate leaving_object(Person, Object)=true if
	appear(Object),
	inactive(Object)=true,
	person(Person)=true,
	closeSymmetric(Person, Object, 30)=true.

initiate leaving_object(Person, Object)=false if
	disappear(Object).

initiate meeting(P1, P2)=true if
	start greeting1(P1, P2)=true,
	not happens disappear(P1),
	not happens disappear(P2)
or	start greeting2(P1, P2)=true,
	not happens disappear(P1),
	not happens disappear(P2).

greeting1(P1, P2)=true iff
	(activeOrInactivePerson(P1)=true,
	person(P2)=true,
	close(P1, P2, 25)=true),
	not(running(P2)=true or abrupt(P2)=true).

greeting2(P1, P2)=true iff
	walking(P1)=true,
	activeOrInactivePerson(P2)=true,
	close(P2, P1, 25)=true.

activeOrInactivePerson(P)=true iff
	active(P)=true or (inactive(P)=true, person(P)=true).

initiate meeting(P1, P2)=false if
	start running(P1)=true
or	start running(P2)=true
or	start abrupt(P1)=true
or	start abrupt(P2)=true
or	start close(P1, P2, 34)=false.

moving(P1, P2)=true iff
	walking(P1)=true,
	walking(P2)=true,
	close(P1, P2, 34)=true.

fighting(P1, P2)=true iff
	((abrupt(P1)=true or abrupt(P2)=true),
	close(P1, P2, 24)=true),
	not(inactive(P1)=true or inactive(P2)=true).
	
